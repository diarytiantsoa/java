/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projet2.Principal;



import com.mycompany.projet2.sql.Connectionsql;
import java.awt.HeadlessException;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;

import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Component;
import java.io.FileNotFoundException;

import java.io.FileOutputStream;
import java.sql.Types;
 import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import java.sql.ResultSetMetaData;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.concurrent.TimeUnit;
import javax.swing.JTextField;





/**
 *
 * @author dell
 */ 

public class Menu extends javax.swing.JFrame {
    
    Connection conn = null;
    PreparedStatement stm;
    ResultSet rs;
    
    public Menu() {
        initComponents();
        conn = Connectionsql.connexion();
        Table();
        Tablepointage();
        Tableconge();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        nom_emp = new javax.swing.JTextField();
        prenom_emp = new javax.swing.JTextField();
        poste = new javax.swing.JTextField();
        num_emp = new javax.swing.JTextField();
        salaire = new javax.swing.JTextField();
        supprimer = new javax.swing.JButton();
        modifier = new javax.swing.JButton();
        recherche = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        recherche_employe = new javax.swing.JButton();
        pdf = new javax.swing.JButton();
        ajouter = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tableemploye = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        numemppoint = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        pointage = new javax.swing.JComboBox<>();
        modifpointage = new javax.swing.JButton();
        ajouter3 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        ajt_pointage = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablepointage = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        numconge = new javax.swing.JTextField();
        motif = new javax.swing.JTextField();
        numempconge = new javax.swing.JTextField();
        datedemande = new com.toedter.calendar.JDateChooser();
        dateretour = new com.toedter.calendar.JDateChooser();
        ajoutconge = new javax.swing.JButton();
        modifconge = new javax.swing.JButton();
        suprconge = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableconge = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTabbedPane1.setFont(new java.awt.Font("Rockwell", 2, 14)); // NOI18N

        jPanel1.setMaximumSize(new java.awt.Dimension(70000, 90000));

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("EMPLOYES");

        jLabel4.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("NOM");

        jLabel5.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("PRENOM");

        jLabel6.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("POSTE");

        jLabel8.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("NUM_EMP");

        nom_emp.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        nom_emp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nom_emp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nom_empActionPerformed(evt);
            }
        });

        prenom_emp.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        prenom_emp.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        poste.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        poste.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        poste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                posteActionPerformed(evt);
            }
        });

        num_emp.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        num_emp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        num_emp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                num_empActionPerformed(evt);
            }
        });

        salaire.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        salaire.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        salaire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salaireActionPerformed(evt);
            }
        });

        supprimer.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        supprimer.setText("Supprimer");
        supprimer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });

        modifier.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        modifier.setText("Modifier");
        modifier.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierActionPerformed(evt);
            }
        });

        recherche.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        recherche.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        recherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercheActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("SALAIRE");

        recherche_employe.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        recherche_employe.setText("Rechercher");
        recherche_employe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recherche_employeActionPerformed(evt);
            }
        });

        pdf.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        pdf.setText("Générer Fiche de Paie en PDF");
        pdf.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfActionPerformed(evt);
            }
        });

        ajouter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ajouter.setText("Ajouter");
        ajouter.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(num_emp, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                    .addComponent(nom_emp))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(pdf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addComponent(recherche_employe, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(recherche))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(poste, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                .addComponent(prenom_emp)
                                .addComponent(salaire)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addComponent(ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(num_emp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nom_emp, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prenom_emp, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(poste, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salaire, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recherche, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recherche_employe, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pdf, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        Tableemploye.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        Tableemploye.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TableemployeMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(Tableemploye);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(158, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Employés", jPanel1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel10.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 51, 51));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("POINTAGE");

        jLabel12.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel12.setText("NUM_EMP");

        numemppoint.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numemppoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numemppointActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel13.setText("POINTAGE");

        pointage.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        pointage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Non", "Oui" }));
        pointage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointageActionPerformed(evt);
            }
        });

        modifpointage.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        modifpointage.setText("Modifier");
        modifpointage.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        modifpointage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifpointageActionPerformed(evt);
            }
        });

        ajouter3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ajouter3.setText("Supprimer");
        ajouter3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ajouter3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouter3ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel11.setText("DATE POINTAGE");

        ajt_pointage.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ajt_pointage.setText("Ajouter");
        ajt_pointage.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ajt_pointage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajt_pointageActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        jButton1.setText("LISTE DES ABSENTS");
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance())));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ajt_pointage, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modifpointage, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ajouter3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pointage, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(numemppoint, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numemppoint, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pointage, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ajt_pointage, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modifpointage, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ajouter3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        tablepointage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablepointage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablepointageMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tablepointage);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(693, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 391, Short.MAX_VALUE)
                        .addGap(84, 84, 84)))
                .addGap(33, 33, 33)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pointage", jPanel2);

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CONGES");

        jLabel3.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel3.setText("NUM_CONGE");

        jLabel14.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel14.setText("MOTIF");

        jLabel15.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel15.setText("NUM_EMP");

        jLabel16.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel16.setText("DATE_DEMANDE");

        jLabel17.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel17.setText("DATE_RETOUR");

        numconge.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numconge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numcongeActionPerformed(evt);
            }
        });

        numempconge.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numempconge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numempcongeActionPerformed(evt);
            }
        });

        ajoutconge.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ajoutconge.setText("Ajouter");
        ajoutconge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajoutcongeActionPerformed(evt);
            }
        });

        modifconge.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        modifconge.setText("Modifier");
        modifconge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifcongeActionPerformed(evt);
            }
        });

        suprconge.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        suprconge.setText("Supprimer");
        suprconge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suprcongeActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jButton2.setText("CONSULTATION DU NOMBRE DE JOURS RESTANTS");
        jButton2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(ajoutconge, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(modifconge, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(suprconge)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16))
                                .addGap(22, 22, 22)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(datedemande, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(motif, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                    .addComponent(numempconge, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                    .addComponent(numconge, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                    .addComponent(dateretour, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel17))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numconge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(numempconge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(motif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(datedemande, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateretour, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(modifconge, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ajoutconge, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(suprconge, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        tableconge.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableconge.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablecongeMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tableconge);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE))
                .addContainerGap(195, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Congés", jPanel3);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 799, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 642, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("", jPanel8);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        setSize(new java.awt.Dimension(813, 491));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tablecongeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablecongeMouseReleased
        // TODO add your handling code here:
        try {
            int i = tableconge.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tableconge.getModel();

            numconge.setText(model.getValueAt(i, 0).toString());
            numempconge.setText(model.getValueAt(i, 1).toString());
            motif.setText(model.getValueAt(i, 2).toString());

            String dateString = model.getValueAt(i, 4).toString();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date date = dateFormat.parse(dateString);
            datedemande.setDate(date);
            String dateStrg = model.getValueAt(i, 5).toString();
            SimpleDateFormat dateForme = new SimpleDateFormat("yyyy-MM-dd");
            Date dates = dateForme.parse(dateStrg);
            dateretour.setDate(dates);

        } catch (ParseException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tablecongeMouseReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed


conn = Connectionsql.connexion();
int i = tableconge.getSelectedRow();
DefaultTableModel model = (DefaultTableModel) tableconge.getModel();
String numemp = model.getValueAt(i, 1).toString();

LocalDate dateDemande = datedemande.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
LocalDate dateRetour = dateretour.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

int nbrJr = 0;

for (LocalDate date = dateDemande; date.isBefore(dateRetour); date = date.plusDays(1)) {
    if (date.getDayOfWeek() != DayOfWeek.SATURDAY && date.getDayOfWeek() != DayOfWeek.SUNDAY) {
        nbrJr++;
    }
}

try {
    PreparedStatement stmtTMP = conn.prepareStatement("SELECT numconge, numemp, motif, nbrjr, datedemande, dateretour\n" +
        "FROM public.conges WHERE numemp=?;");
    stmtTMP.setString(1, numemp);
    ResultSet res = stmtTMP.executeQuery();
    int congetotale = 0;
    while (res.next()) {
        congetotale += res.getInt("nbrjr");
    }

    JOptionPane.showMessageDialog(this, "nombre de congés de l'employé num " + numemp + " est :" + (30 - congetotale) + " jours");
} catch (SQLException ex) {
    Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
}








    }//GEN-LAST:event_jButton2ActionPerformed

    private void suprcongeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suprcongeActionPerformed
        // Afficher une boîte de dialogue de confirmation
        int option = JOptionPane.showConfirmDialog(null, "Êtes-vous sûr de vouloir supprimer ce congé ?", "Confirmation de suppression", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            try {
                // Code pour supprimer le congé
                conn = Connectionsql.connexion();
                PreparedStatement stmt = conn.prepareStatement("DELETE FROM conges WHERE numconge = ?");
                stmt.setString(1, numconge.getText());
                stmt.executeUpdate();
                numconge.setText("");
                numempconge.setText("");
                motif.setText("");
                datedemande.setDate(null);
                dateretour.setDate(null);
                conn.close();
                JOptionPane.showMessageDialog(null, "Congé supprimé");
                Tableconge();
            } catch (SQLException e) {
                // Gérer spécifiquement les SQLExceptions
                JOptionPane.showMessageDialog(null, "Erreur lors de la suppression du congé : " + e.getMessage());

            } catch (Exception e) {
                // Gérer toutes les autres exceptions
                JOptionPane.showMessageDialog(null, "Une erreur s'est produite : " + e.getMessage());

            }
        }
    }//GEN-LAST:event_suprcongeActionPerformed

    private void modifcongeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifcongeActionPerformed
       try {
    conn = Connectionsql.connexion();
    java.util.Date dateDemande = datedemande.getDate();
    Timestamp dateDem = new Timestamp(dateDemande.getTime());
    java.util.Date dateRetour = dateretour.getDate();
    Timestamp dateRet = new Timestamp(dateRetour.getTime());

    long diffInMillies = Math.abs(dateRetour.getTime() - dateDemande.getTime());
    int nbrJr = (int) TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);

    PreparedStatement stmt = conn.prepareStatement("UPDATE \"conges\" SET numemp=?, motif=?, nbrjr=?, datedemande=?, dateretour=? WHERE numconge=?");
    stmt.setString(1, numempconge.getText());
    stmt.setString(2, motif.getText());
    stmt.setInt(3, nbrJr);
    stmt.setTimestamp(4, dateDem);
    stmt.setTimestamp(5, dateRet);
    stmt.setString(6, numconge.getText());
    stmt.executeUpdate();
    datedemande.setDate(dateDemande);
    dateretour.setDate(dateRetour);

    numconge.setText("");
    numempconge.setText("");
    motif.setText("");
    datedemande.setDate(null);
    dateretour.setDate(null);

    conn.close();
    JOptionPane.showMessageDialog(null, "Congé modifié");
    Tableconge();


          }catch(Exception e){
              JOptionPane.showMessageDialog(null, "Congé non modifié"+ e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_modifcongeActionPerformed

    private void ajoutcongeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajoutcongeActionPerformed
        // TODO add your handling code here:
        try {
            conn = Connectionsql.connexion();
            Date date = datedemande.getDate();
            Date dates = dateretour.getDate();
            String numemp = numempconge.getText();
            PreparedStatement stmtTMP = conn.prepareStatement("SELECT numconge, numemp, motif, nbrjr, datedemande, dateretour\n" +
                "FROM public.conges WHERE numemp='"+numemp+"' ;");
            ResultSet res = stmtTMP.executeQuery();
            int congetotale = 0;
            while (res.next()) {
                congetotale += res.getInt("nbrjr");
            }
            if (congetotale <= 30){

                int nbjr = (int) ((dates.getTime() - date.getTime()) / (1000 * 60 * 60 * 24));

                if (nbjr + congetotale <= 30) {
                    PreparedStatement stmt = conn.prepareStatement("INSERT INTO \"conges\"(numconge,numemp,motif,nbrjr,datedemande,dateretour) VALUES (?,?,?,?,?,?)");
                    stmt.setString(1, numconge.getText());
                    stmt.setString(2, numempconge.getText());
                    stmt.setString(3, motif.getText());
                    stmt.setInt(4, nbjr);
                    stmt.setDate(5, new java.sql.Date(date.getTime()));
                    stmt.setDate(6, new java.sql.Date(dates.getTime()));
                    stmt.executeUpdate();

                    numconge.setText("");
                    numempconge.setText("");
                    motif.setText("");
                    datedemande.setDate(null);
                    dateretour.setDate(null);

                    conn.close();
                    JOptionPane.showMessageDialog(null, "Congé ajouté");
                    Tableconge();
                } else {
                    JOptionPane.showMessageDialog(null, "Le nombre de jours de congés ne peut pas dépasser 30.");
                }
            }else {
                JOptionPane.showMessageDialog(null, "Le nombre de jours de congés ne peut pas dépasser 30.");
            }
        } catch (Exception e) {
               JOptionPane.showMessageDialog(null, "Erreur lors de l'insertion du congé : " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_ajoutcongeActionPerformed

    private void numempcongeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numempcongeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numempcongeActionPerformed

    private void numcongeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numcongeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numcongeActionPerformed

    private void tablepointageMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablepointageMouseReleased

        try {
            int i = tablepointage.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tablepointage.getModel();
            String dateString = model.getValueAt(i, 0).toString();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd hh:mm");
            Date date = dateFormat.parse(dateString);
            jDateChooser1.setDate(date);
            numemppoint.setText(model.getValueAt(i, 1).toString());
            pointage.setSelectedItem(model.getValueAt(i, 2).toString());
            
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tablepointageMouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new ListAbs().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ajt_pointageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajt_pointageActionPerformed
        // TODO add your handling code here:
try {
    conn = Connectionsql.connexion();
    // Récupérez la date sous forme de chaîne de caractères
    String dateString = new SimpleDateFormat("yyyy-MM-dd").format(jDateChooser1.getDate());


    // Obtenez l'heure locale
    LocalTime localTime = LocalTime.now();

    // Convertissez l'heure locale en une chaîne de caractères avec le format souhaité
    DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("HH:mm:ss");
    String timeString = localTime.format(timeFormatter);

    // Combinez la date et l'heure en une seule chaîne de caractères
    String dateTimeString = dateString + " " + timeString;

    // Convertissez la chaîne de caractères en java.sql.Timestamp
    SimpleDateFormat datetimeFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    java.util.Date dateTime = datetimeFormat.parse(dateTimeString);
    Timestamp timestamp = new Timestamp(dateTime.getTime());
    // Le reste du code pour insérer le pointage dans la base de données
    PreparedStatement stmt = conn.prepareStatement("INSERT INTO \"pointage\" (\"datepointage\", \"numemp\", \"pointage\") VALUES (CAST(? AS timestamp with time zone), ?, ?)");
    stmt.setTimestamp(1, timestamp);
    stmt.setString(2, numemppoint.getText());
    stmt.setString(3, pointage.getSelectedItem().toString());
    stmt.executeUpdate();

    // Mettre à jour le salaire si l'employé est absent
    if (pointage.getSelectedItem().toString().equals("Non")) {
        String numemp = numemppoint.getText();

        String updateQuery = "UPDATE \"employe\" SET salaire = salaire - 10000 WHERE numemp = ?";
        PreparedStatement updateStmt = conn.prepareStatement(updateQuery);
        updateStmt.setString(1, numemp);
        updateStmt.executeUpdate();
        Table();
    }

    jDateChooser1.setDate(null);
    numemppoint.setText("");
    pointage.setSelectedIndex(-1);
    conn.close();
    JOptionPane.showMessageDialog(null, "Pointage ajouté");

    Tablepointage();
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Erreur lors de l'insertion du pointage : " + e.getMessage());
    e.printStackTrace();
}




   
       
    }//GEN-LAST:event_ajt_pointageActionPerformed

    private void ajouter3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouter3ActionPerformed
try {
    Connection conn = Connectionsql.connexion();
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String dateString = dateFormat.format(jDateChooser1.getDate());

    LocalTime localTime = LocalTime.now();
    DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("HH:mm:ss.SSS");
    String timeString = localTime.format(timeFormatter);

    String dateTimeString = dateString + " " + timeString;
    SimpleDateFormat datetimeFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
    java.util.Date dateTime = datetimeFormat.parse(dateTimeString);
    Timestamp timestamp = new Timestamp(dateTime.getTime());

    PreparedStatement stmt = conn.prepareStatement("DELETE FROM pointage WHERE datepointage = ?");
    stmt.setTimestamp(1, timestamp);

    int rowsAffected = stmt.executeUpdate();
    conn.close();

    if (rowsAffected > 0) {
        JOptionPane.showMessageDialog(null, "Pointage supprimé");
        Tablepointage();
    } else {
        JOptionPane.showMessageDialog(null, "Aucun pointage n'a été supprimé");
    }

    // Réinitialiser les valeurs
    jFormattedTextField1.setText("");
    jDateChooser1.setDate(null);
    numemppoint.setText("");
    pointage.setSelectedIndex(-1);
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Erreur lors de la suppression du pointage : " + e.getMessage());
    e.printStackTrace();
}










    }//GEN-LAST:event_ajouter3ActionPerformed

    private void modifpointageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifpointageActionPerformed
        // TODO add your handling code here:
 try {
    conn = Connectionsql.connexion();

    if (conn != null && !conn.isClosed()) {
        // La connexion est établie avec succès
        System.out.println("Connexion à la base de données établie");



        // Récupérer la nouvelle valeur du pointage
        String newPointage = (String) pointage.getSelectedItem();

        // Préparer la requête SQL pour la mise à jour du pointage
        PreparedStatement stmt = conn.prepareStatement("UPDATE \"pointage\" SET \"pointage\" = ? WHERE \"datepointage\" = CAST(? AS timestamp with time zone)");

        // Utiliser la nouvelle valeur du pointage et la date sélectionnée dans la requête SQL
        stmt.setString(1, newPointage);
        stmt.setTimestamp(2, new Timestamp(jDateChooser1.getDate().getTime()));

        // Exécuter la requête de mise à jour
        int rowsAffected = stmt.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Pointage modifié");
            Tablepointage();
        } else {
            JOptionPane.showMessageDialog(null, "Aucun enregistrement modifié");
        }

        jDateChooser1.setDate(null);
        numemppoint.setText("");
        pointage.setSelectedIndex(-1);
        conn.close();
    } else {
        // La connexion a échoué
        System.out.println("Échec de la connexion à la base de données");
    }
} catch (HeadlessException | SQLException e) {
    JOptionPane.showMessageDialog(null, "Erreur lors de la modification du pointage !");
    e.printStackTrace();
}




    }//GEN-LAST:event_modifpointageActionPerformed

    private void pointageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pointageActionPerformed

    private void numemppointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numemppointActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numemppointActionPerformed

    private void TableemployeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableemployeMouseReleased
        // TODO add your handling code here:
        int i=Tableemploye.getSelectedRow();
        DefaultTableModel model=(DefaultTableModel)Tableemploye.getModel();
        num_emp.setText(model.getValueAt(i, 0).toString());
        nom_emp.setText(model.getValueAt(i, 1).toString());
        prenom_emp.setText(model.getValueAt(i, 2).toString());
        poste.setText(model.getValueAt(i, 3).toString());
        salaire.setText(model.getValueAt(i, 4).toString());
    }//GEN-LAST:event_TableemployeMouseReleased

    private void recherche_employeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recherche_employeActionPerformed

        try {
            Connection conn = Connectionsql.connexion(); // Assurez-vous d'initialiser correctement la connexion
            if (conn != null) {
                String search = recherche.getText();

                try (PreparedStatement stmt = conn.prepareStatement("SELECT numemp, nom, prenom, poste, salaire FROM \"employe\" WHERE LOWER(nom) LIKE LOWER('%"+ search +"%') OR LOWER(prenom) LIKE LOWER('%"+ search +"%') ORDER BY numemp ASC");
                    ResultSet rs = stmt.executeQuery()) {

                    DefaultTableModel model = (DefaultTableModel) Tableemploye.getModel();
                    model.setRowCount(0); // Effacer le modèle de table existant

                    while (rs.next()) {
                        String numemp = rs.getString("numemp");
                        String nom = rs.getString("nom");
                        String prenom = rs.getString("prenom");
                        String poste = rs.getString("poste");
                        int salaire = rs.getInt("salaire");

                        // Faites quelque chose avec les valeurs récupérées
                        // Par exemple, ajoutez-les au modèle de la table
                        model.addRow(new Object[]{numemp, nom, prenom, poste, salaire});
                    }

                    if (model.getRowCount() == 0) {
                        JOptionPane.showMessageDialog(this, "Aucun résultat trouvé.");
                    }
                }

                conn.close();
            } else {
                JOptionPane.showMessageDialog(this, "Échec de la connexion à la base de données.");
            }
        } catch (SQLException e) {
            // Gérez l'exception appropriée
            e.printStackTrace();
        }

        // Fermez la connexion après utilisation
    }//GEN-LAST:event_recherche_employeActionPerformed

    private void rechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercheActionPerformed
        // TODO add your handling code here:
        try{

        }
        catch (Exception e){

        }
    }//GEN-LAST:event_rechercheActionPerformed

    private void ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterActionPerformed
try {
    conn = Connectionsql.connexion();
    PreparedStatement stmt = conn.prepareStatement("INSERT INTO \"employe\" (numemp, nom, prenom, poste, salaire) VALUES (?, ?, ?, ?, ?)");
    stmt.setString(1, num_emp.getText());
    stmt.setString(2, nom_emp.getText());
    stmt.setString(3, prenom_emp.getText());
    stmt.setString(4, poste.getText());
    
    int salaireValue = Integer.parseInt(salaire.getText());
    
    // Formatage du salaire avec des séparateurs de milliers
    DecimalFormat decimalFormat = new DecimalFormat("#,###");
    String salaireFormate = decimalFormat.format(salaireValue);
    
    stmt.setInt(5, salaireValue);
    stmt.executeUpdate();
    
    num_emp.setText("");
    nom_emp.setText("");
    prenom_emp.setText("");
    poste.setText("");
    
    conn.close();
    JOptionPane.showMessageDialog(null, "Employe ajouté");
    Table();
    
    //
    
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Employé non ajouté  ! le Numero employé existe déjà");
    e.printStackTrace();
}






    }//GEN-LAST:event_ajouterActionPerformed

    private void modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierActionPerformed
     
    try {
        conn = Connectionsql.connexion();
        PreparedStatement stmt = conn.prepareStatement("Update \"employe\" set \"nom\"=?,\"prenom\"=?,\"poste\"=?,\"salaire\"=? where \"numemp\"=?");
        stmt.setString(5, num_emp.getText());
        stmt.setString(1, nom_emp.getText());
        stmt.setString(2, prenom_emp.getText());
        stmt.setString(3, poste.getText());

        String salaireText = salaire.getText();
        String salaireValue = salaireText.replaceAll("[^0-9]", ""); // Supprime tous les caractères non numériques

        int Salaire = Integer.parseInt(salaireValue); // Convertit la chaîne sans caractères non numériques en un nombre entier

        stmt.setInt(4, Salaire);
        stmt.executeUpdate();

        num_emp.setText("");
        nom_emp.setText("");
        prenom_emp.setText("");
        poste.setText("");
        salaire.setText("");
        conn.close();
        JOptionPane.showMessageDialog(null, "Employe modifié");
        Table();
    } catch (Exception e) {
        e.printStackTrace();
    }


    }//GEN-LAST:event_modifierActionPerformed

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
        // TODO add your handling code here:
           int option = JOptionPane.showConfirmDialog(null, "Êtes-vous sûr de vouloir supprimer cet employé ?", "Confirmation de suppression", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
        try{
            conn = Connectionsql.connexion();
            PreparedStatement stmt= conn.prepareStatement("Delete from \"employe\" where  \"numemp\"=?");
            stmt.setString(1,num_emp.getText());
            stmt.executeUpdate();
            num_emp.setText("");
            nom_emp.setText("");
            prenom_emp.setText("");
            poste.setText("");
            salaire.setText("");
            conn.close();
            JOptionPane.showMessageDialog(null, "Employe supprimé");
            Table();
        }catch(Exception e){
            e.printStackTrace();
        }
        }
    }//GEN-LAST:event_supprimerActionPerformed

    private void salaireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salaireActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salaireActionPerformed

    private void num_empActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_num_empActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_num_empActionPerformed
    private void posteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_posteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_posteActionPerformed

    private void nom_empActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nom_empActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nom_empActionPerformed

    private void pdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfActionPerformed


Document document = new Document();
try {
    PdfWriter.getInstance(document, new FileOutputStream("C://Users//dell//Downloads/fichier.pdf"));
    document.open();

    // Obtenez les données de l'employé sélectionné dans la jTable
    DefaultTableModel model = (DefaultTableModel) Tableemploye.getModel();
    int selectedRow = Tableemploye.getSelectedRow();
    String numEmp = model.getValueAt(selectedRow, 0).toString();
    String nomEmp = model.getValueAt(selectedRow, 1).toString();
    String prenomEmp = model.getValueAt(selectedRow, 2).toString();
    String posteEmp = model.getValueAt(selectedRow, 3).toString();
    String salaireEmp = model.getValueAt(selectedRow, 4).toString();

    Date currentDate = new Date();

    // Formater la date dans le format souhaité
    SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
    String formattedDate = dateFormat.format(currentDate);

    // Ajoutez les informations de l'employé au document PDF
    document.add(new Paragraph("Date : " + formattedDate));
    document.add(new Paragraph("Numéro : " + numEmp));
    document.add(new Paragraph("Nom : " + nomEmp));
    document.add(new Paragraph("Prénom(s) : " + prenomEmp));
    document.add(new Paragraph("Poste : " + posteEmp));
   // Obtenir la valeur de numemp depuis votre source de données (par exemple, une JTable)
String numemp = Tableemploye.getValueAt(selectedRow, 0).toString();

// Appeler la méthode getNbrAbsence pour obtenir le nombre d'absences
int nbrabs = getNbrAbsence(numemp);

// Ajouter le nombre d'absences au document PDF
document.add(new Paragraph("Nombre d'absence: " + nbrabs));


   
// Obtenez le montant du salaire en tant que chaîne de caractères
 salaireEmp = model.getValueAt(selectedRow, 4).toString();



// Supprimez les caractères non numériques de la chaîne de salaire
String cleanedSalaireEmp = salaireEmp.replaceAll("[^\\d]", "");

// Convertissez le montant nettoyé en valeur numérique
double salaireValue = Double.parseDouble(cleanedSalaireEmp);



// Créez un objet NumberFormat pour formater le salaire avec des séparateurs de milliers
NumberFormat numberFormat = NumberFormat.getNumberInstance();
String salaireFormatted = numberFormat.format(salaireValue);

// Convertissez le montant formaté en valeur numérique
double salaireFormattedValue = Double.parseDouble(cleanedSalaireEmp);

// Ajoutez le montant du salaire formaté au document PDF
document.add(new Paragraph("Salaire : " + salaireFormatted + " (" + convertNumberToWords((int) salaireFormattedValue) + " Ariary ) "));



    

    document.close();
      JOptionPane.showMessageDialog(null, "PDF généré veuillez regardez dans Téléchargement ");
    System.out.println("Le fichier PDF a été généré avec succès.");
} catch (DocumentException | FileNotFoundException ex) {
    ex.printStackTrace();
}



    

        
    }//GEN-LAST:event_pdfActionPerformed
public void Table() {
    String[] employe = { "NUM_EMP", "NOM", "PRENOM", "POSTE", "SALAIRE" };
    DefaultTableModel model = new DefaultTableModel(employe, 0);

    try {
        conn = Connectionsql.connexion();
        Statement stm = conn.createStatement();
        rs = stm.executeQuery("SELECT * FROM \"employe\"");

        // Création d'un formatter pour le séparateur de milliers
        DecimalFormat decimalFormat = new DecimalFormat("#,###");

        while (rs.next()) {
            Object[] rowData = new Object[5];
            rowData[0] = rs.getString("numemp");
            rowData[1] = rs.getString("nom");
            rowData[2] = rs.getString("prenom");
            rowData[3] = rs.getString("poste");

            int salaireValue = rs.getInt("salaire");
            String salaireFormatted = decimalFormat.format(salaireValue);
            rowData[4] = salaireFormatted;

            model.addRow(rowData);
        }

        Tableemploye.setModel(model);
        conn.close();
    } catch (Exception e) {
        e.printStackTrace();
        System.out.println(e);
    }







   
}
public void Tablepointage(){
 String[] pointage = {"DATE", "NUM_EMP", "POINTAGE"};
DefaultTableModel contenu = new DefaultTableModel(null,pointage);

try {
    conn = Connectionsql.connexion();
String[] afficher = new String[3];
    PreparedStatement stmt = conn.prepareStatement("SELECT * FROM \"pointage\"");
    ResultSet res = stmt.executeQuery();

    while (res.next()) {
        
        afficher[0] = res.getString(1);
        afficher[1] = res.getString(2);
        afficher[2] = res.getString(3);

       contenu.addRow(afficher);
    }

    tablepointage.setModel(contenu); 
    conn.close();
} catch (SQLException e) {
}
   
}
public void Tableconge(){
    String[]Conges={"NUM_CONGE","NUM_EMP","MOTIF","NBR_JOUR","DEBUT","FIN"};
    String []afficher =new String[7];
    DefaultTableModel model=new DefaultTableModel (null,Conges);
        try{
            
            conn = Connectionsql.connexion();
           Statement stm=(Statement)conn.createStatement();
            rs=stm.executeQuery("select * from \"conges\"");
            
            while(rs.next()){
                afficher[0]=rs.getString("numconge");
                afficher[1]=rs.getString("numemp");
                afficher[2]=rs.getString("motif");
                afficher[3]=rs.getString("nbrjr");
                afficher[4]=rs.getString("datedemande");
                afficher[5]=rs.getString("dateretour");
                model.addRow(afficher);
                tableconge.setModel(model);
                  
                conn.close();
            }
        }
        catch (Exception e){
            e.printStackTrace();
           
        }
    
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tableemploye;
    private javax.swing.JButton ajoutconge;
    private javax.swing.JButton ajouter;
    private javax.swing.JButton ajouter3;
    private javax.swing.JButton ajt_pointage;
    private com.toedter.calendar.JDateChooser datedemande;
    private com.toedter.calendar.JDateChooser dateretour;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton modifconge;
    private javax.swing.JButton modifier;
    private javax.swing.JButton modifpointage;
    private javax.swing.JTextField motif;
    private javax.swing.JTextField nom_emp;
    private javax.swing.JTextField num_emp;
    private javax.swing.JTextField numconge;
    private javax.swing.JTextField numempconge;
    private javax.swing.JTextField numemppoint;
    private javax.swing.JButton pdf;
    private javax.swing.JComboBox<String> pointage;
    private javax.swing.JTextField poste;
    private javax.swing.JTextField prenom_emp;
    private javax.swing.JTextField recherche;
    private javax.swing.JButton recherche_employe;
    private javax.swing.JTextField salaire;
    private javax.swing.JButton supprimer;
    private javax.swing.JButton suprconge;
    private javax.swing.JTable tableconge;
    private javax.swing.JTable tablepointage;
    // End of variables declaration//GEN-END:variables

    private void connexion() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

  private String convertNumberToWords(int number) {
    String[] units = { "", "un", "deux", "trois", "quatre", "cinq", "six", "sept", "huit", "neuf", "dix", "onze",
            "douze", "treize", "quatorze", "quinze", "seize", "dix-sept", "dix-huit", "dix-neuf" };

    String[] tens = { "", "", "vingt", "trente", "quarante", "cinquante", "soixante", "soixante-dix", "quatre-vingt",
            "quatre-vingt-dix" };

    if (number == 0) {
        return "zéro";
    }

    if (number < 0) {
        return "moins " + convertNumberToWords(Math.abs(number));
    }

    String words = "";

    if ((number / 1000000) > 0) {
        words += convertNumberToWords(number / 1000000) + " Million ";
        number %= 1000000;
    }

    if ((number / 1000) > 0) {
        words += convertNumberToWords(number / 1000) + " Mille ";
        number %= 1000;
    }

    if ((number / 100) > 0) {
        if (number / 100 == 1) {
            words += "Cent ";
        } else {
            words += convertNumberToWords(number / 100) + " Cent ";
        }
        number %= 100;
    }

    if (number > 0) {
        if (number < 20) {
            words += units[number];
        } else {
            words += tens[number / 10];
            if ((number % 10) > 0) {
                words += "-" + units[number % 10];
            }
        }
    }

    return words.trim();
}






// Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
private int getNbrAbsence(String numemp) {
       conn = Connectionsql.connexion();
    String selectStmt = "SELECT COUNT(*) FROM pointage WHERE numemp = '" + numemp + "' AND pointage = 'Non';";
    int nbrAbsence = 0;
    
    try {
        PreparedStatement statement = conn.prepareStatement(selectStmt);
        ResultSet rsPointage = statement.executeQuery();
        
        if (rsPointage.next()) {
            nbrAbsence = rsPointage.getInt(1);
        }
        
        rsPointage.close();
        statement.close();
           conn.close();
          
    } catch (SQLException e) {
        System.out.println("SQL select operation has failed: " + e);
    }
    
    return nbrAbsence;
}

    private String convertNumberToWords(String salaire) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    
    }


